{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"@/router\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"Register\",\n  components: {},\n  data() {\n    return {\n      form: {},\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input Username',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please input Password',\n          trigger: 'blur'\n        }],\n        confirm: [{\n          required: true,\n          message: 'Please confirm Password',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    regist() {\n      if (this.form.password !== this.form.confirm) {\n        this.$message({\n          type: \"error\",\n          message: 'The 2 passwords entered are inconsistent!'\n        });\n        return;\n      }\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            request.post(\"/register\", this.form).then(res => {\n              console.log(res);\n              if (res.code === '0') {\n                this.$message({\n                  type: \"success\",\n                  message: \"Register Successfully!\"\n                });\n                router.push(\"/\");\n              } else {\n                this.$message({\n                  type: \"error\",\n                  message: \"res.msg\"\n                });\n              }\n            });\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","request","name","components","data","form","rules","required","message","trigger","password","confirm","methods","regist","$message","type","$refs","validate","valid","id","post","then","res","console","log","code","push"],"sources":["/Users/ning/it26/it26/VUE/src/views/Register.vue"],"sourcesContent":["<template>\n  <div\n      style=\"width: 400px; margin: 60px auto\"\n      class=\"flex flex-col justify-center items-center inline-flex\"\n      :style=\"{boxShadow: '--el-box-shadow-dark',}\"\n  >\n    <el-tabs type=\"border-card\">\n      <div style=\"margin: 10px; font-size: large; font-weight: bold; text-align: center\">\n        Movie Ticket Online Ordering System\n      </div>\n\n      <el-form\n          :label-position=\"'top'\"\n          label-width=\"100px\"\n          ref=\"form\"\n          :model=\"form\"\n          style=\"margin-top: 50px; max-width: 460px;\"\n          :rules=\"rules\"\n      >\n        <el-form-item label=\"Email\">\n          <el-input v-model=\"form.email\" />\n        </el-form-item>\n        <el-form-item label=\"Username\">\n          <el-input v-model=\"form.name\" />\n        </el-form-item>\n        <el-form-item label=\"Password\">\n          <el-input v-model=\"form.password\" />\n        </el-form-item>\n        <el-form-item label=\"Confirm Password\">\n          <el-input v-model=\"form.confirm\" />\n        </el-form-item>\n        <el-form-item style=\" padding-left: 150px; padding-top: 10px\">\n          <el-button color='black' @click=\"regist\">\n            Sign up\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport router from \"@/router\";\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"Register\",\n  components: {},\n  data() {\n    return {\n      form: {},\n      rules: {\n        name: [\n          {required: true, message: 'Please input Username', trigger: 'blur'},\n        ],\n        password: [\n          {required: true, message: 'Please input Password', trigger: 'blur'},\n        ],\n        confirm: [\n          {required: true, message: 'Please confirm Password', trigger: 'blur'},\n        ],\n      },\n    }\n  },\n  methods: {\n    regist() {\n      if (this.form.password !== this.form.confirm) {\n        this.$message({\n          type: \"error\",\n          message: 'The 2 passwords entered are inconsistent!'\n        })\n        return\n      }\n\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          if (this.form.id) {\n            request.post(\"/register\", this.form).then(res => {\n              console.log(res)\n              if (res.code === '0') {\n                this.$message({\n                  type: \"success\",\n                  message: \"Register Successfully!\"\n                })\n                router.push(\"/\")\n              } else {\n                this.$message({\n                  type: \"error\",\n                  message: \"res.msg\"\n                })\n              }\n            })\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":";AA0CA,OAAOA,MAAK,MAAO,UAAU;AAC7B,OAAOC,OAAM,MAAO,iBAAiB;AAErC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,CAAC;MACRC,KAAK,EAAE;QACLJ,IAAI,EAAE,CACJ;UAACK,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,uBAAuB;UAAEC,OAAO,EAAE;QAAM,CAAC,CACpE;QACDC,QAAQ,EAAE,CACR;UAACH,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,uBAAuB;UAAEC,OAAO,EAAE;QAAM,CAAC,CACpE;QACDE,OAAO,EAAE,CACP;UAACJ,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,yBAAyB;UAAEC,OAAO,EAAE;QAAM,CAAC;MAEzE;IACF;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACR,IAAI,CAACK,QAAO,KAAM,IAAI,CAACL,IAAI,CAACM,OAAO,EAAE;QAC5C,IAAI,CAACG,QAAQ,CAAC;UACZC,IAAI,EAAE,OAAO;UACbP,OAAO,EAAE;QACX,CAAC;QACD;MACF;MAEA,IAAI,CAACQ,KAAK,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAEC,KAAK,IAAK;QACrC,IAAIA,KAAK,EAAE;UACT,IAAI,IAAI,CAACb,IAAI,CAACc,EAAE,EAAE;YAChBlB,OAAO,CAACmB,IAAI,CAAC,WAAW,EAAE,IAAI,CAACf,IAAI,CAAC,CAACgB,IAAI,CAACC,GAAE,IAAK;cAC/CC,OAAO,CAACC,GAAG,CAACF,GAAG;cACf,IAAIA,GAAG,CAACG,IAAG,KAAM,GAAG,EAAE;gBACpB,IAAI,CAACX,QAAQ,CAAC;kBACZC,IAAI,EAAE,SAAS;kBACfP,OAAO,EAAE;gBACX,CAAC;gBACDR,MAAM,CAAC0B,IAAI,CAAC,GAAG;cACjB,OAAO;gBACL,IAAI,CAACZ,QAAQ,CAAC;kBACZC,IAAI,EAAE,OAAO;kBACbP,OAAO,EAAE;gBACX,CAAC;cACH;YACF,CAAC;UACH;QACF;MACF,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}