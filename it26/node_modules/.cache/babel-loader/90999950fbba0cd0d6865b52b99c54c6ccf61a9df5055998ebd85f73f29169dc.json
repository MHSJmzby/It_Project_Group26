{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"@/router\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"Register\",\n  components: {},\n  data() {\n    return {\n      form: {},\n      rules: {\n        email: [{\n          required: true,\n          message: 'Please input Email',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: 'Please input Username',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please input Password',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    regist() {\n      if (this.form.password !== this.form.confirm) {\n        this.$message({\n          type: \"error\",\n          message: 'The 2 passwords entered are inconsistent!'\n        });\n        return;\n      }\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          console.log(this.form);\n          request.post(\"/register/\", this.form).then(res => {\n            console.log(res);\n            if (res.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"Register Successfully!\"\n              });\n              router.push(\"/\");\n            } else {\n              this.$message({\n                type: \"error\",\n                message: \"res.msg\"\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","request","name","components","data","form","rules","email","required","message","trigger","password","methods","regist","confirm","$message","type","$refs","validate","valid","console","log","post","then","res","code","push"],"sources":["/Users/ning/it26/it26/VUE/src/views/Register.vue"],"sourcesContent":["<template>\n  <div\n      style=\"width: 400px; margin: 60px auto\"\n      class=\"flex flex-col justify-center items-center inline-flex\"\n      :style=\"{boxShadow: '--el-box-shadow-dark',}\"\n  >\n    <el-tabs type=\"border-card\">\n      <div style=\"margin: 10px; font-size: large; font-weight: bold; text-align: center\">\n        Movie Ticket Online Ordering System\n      </div>\n\n      <el-form\n          :label-position=\"'top'\"\n          label-width=\"100px\"\n          ref=\"form\"\n          :model=\"form\"\n          style=\"margin-top: 50px; max-width: 460px;\"\n          :rules=\"rules\"\n      >\n        <el-form-item label=\"Email\" prop=\"email\">\n          <el-input v-model=\"form.email\" />\n        </el-form-item>\n        <el-form-item label=\"Username\" prop=\"name\">\n          <el-input v-model=\"form.name\" />\n        </el-form-item>\n        <el-form-item label=\"Password\" prop=\"password\">\n          <el-input v-model=\"form.password\" />\n        </el-form-item>\n        <el-form-item label=\"Confirm Password\">\n          <el-input v-model=\"form.confirm\" />\n        </el-form-item>\n        <el-form-item style=\" padding-left: 150px; padding-top: 10px\">\n          <el-button color='black' @click=\"regist\">\n            Sign up\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport router from \"@/router\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"Register\",\n  components: {},\n  data() {\n    return {\n      form: {},\n      rules: {\n        email: [\n          {required: true, message: 'Please input Email', trigger: 'blur'},\n        ],\n        name: [\n          {required: true, message: 'Please input Username', trigger: 'blur'},\n        ],\n        password: [\n          {required: true, message: 'Please input Password', trigger: 'blur'},\n        ],\n      },\n    }\n  },\n  methods: {\n    regist() {\n      if (this.form.password !== this.form.confirm) {\n        this.$message({\n          type: \"error\",\n          message: 'The 2 passwords entered are inconsistent!'\n        })\n        return\n      }\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          console.log(this.form)\n          request.post(\"/register/\", this.form).then(res => {\n            console.log(res)\n            if (res.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"Register Successfully!\"\n              })\n              router.push(\"/\")\n            } else {\n              this.$message({\n                type: \"error\",\n                message: \"res.msg\"\n              })\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n"],"mappings":";AA0CA,OAAOA,MAAK,MAAO,UAAU;AAC7B,OAAOC,OAAM,MAAO,iBAAiB;AACrC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,CAAC;MACRC,KAAK,EAAE;QACLC,KAAK,EAAE,CACL;UAACC,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,oBAAoB;UAAEC,OAAO,EAAE;QAAM,CAAC,CACjE;QACDR,IAAI,EAAE,CACJ;UAACM,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,uBAAuB;UAAEC,OAAO,EAAE;QAAM,CAAC,CACpE;QACDC,QAAQ,EAAE,CACR;UAACH,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,uBAAuB;UAAEC,OAAO,EAAE;QAAM,CAAC;MAEvE;IACF;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACR,IAAI,CAACM,QAAO,KAAM,IAAI,CAACN,IAAI,CAACS,OAAO,EAAE;QAC5C,IAAI,CAACC,QAAQ,CAAC;UACZC,IAAI,EAAE,OAAO;UACbP,OAAO,EAAE;QACX,CAAC;QACD;MACF;MACA,IAAI,CAACQ,KAAK,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAEC,KAAK,IAAK;QACrC,IAAIA,KAAK,EAAE;UACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,IAAI;UACrBJ,OAAO,CAACqB,IAAI,CAAC,YAAY,EAAE,IAAI,CAACjB,IAAI,CAAC,CAACkB,IAAI,CAACC,GAAE,IAAK;YAChDJ,OAAO,CAACC,GAAG,CAACG,GAAG;YACf,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;cACpB,IAAI,CAACV,QAAQ,CAAC;gBACZC,IAAI,EAAE,SAAS;gBACfP,OAAO,EAAE;cACX,CAAC;cACDT,MAAM,CAAC0B,IAAI,CAAC,GAAG;YACjB,OAAO;cACL,IAAI,CAACX,QAAQ,CAAC;gBACZC,IAAI,EAAE,OAAO;gBACbP,OAAO,EAAE;cACX,CAAC;YACH;UACF,CAAC;QACH;MACF,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}