{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  mounted() {\n    let pieChart = echarts.init(this.$refs.pieChart);\n    let data = [{\n      value: 40,\n      name: 'CREED III'\n    }, {\n      value: 38,\n      name: 'SHAZAM! FURY OF THE GODS'\n    }, {\n      value: 32,\n      name: 'SCREAM VI'\n    }, {\n      value: 30,\n      name: 'The Legend of 1900'\n    }, {\n      value: 28,\n      name: 'Good Will Hunting'\n    }, {\n      value: 26,\n      name: 'The Shawshank Redemption'\n    }, {\n      value: 22,\n      name: 'Forrest Gump'\n    }, {\n      value: 18,\n      name: 'The Kite Runner'\n    }];\n    let option = {\n      title: {\n        text: \"Viewings of the month\",\n        left: \"center\"\n      },\n      legend: {\n        left: \"left\",\n        orient: \"vertical\"\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      toolbox: {\n        show: true,\n        feature: {\n          mark: {\n            show: true\n          },\n          dataView: {\n            show: true,\n            readOnly: false\n          },\n          restore: {\n            show: true\n          },\n          saveAsImage: {\n            show: true\n          }\n        }\n      },\n      series: [{\n        name: 'Movie Pie',\n        type: 'pie',\n        radius: [50, 200],\n        center: ['50%', '50%'],\n        roseType: 'area',\n        itemStyle: {\n          borderRadius: 4\n        },\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        },\n        data\n      }]\n    };\n    pieChart.setOption(option);\n  }\n};","map":{"version":3,"names":["echarts","mounted","pieChart","init","$refs","data","value","name","option","title","text","left","legend","orient","tooltip","trigger","toolbox","show","feature","mark","dataView","readOnly","restore","saveAsImage","series","type","radius","center","roseType","itemStyle","borderRadius","emphasis","shadowBlur","shadowOffsetX","shadowColor","setOption"],"sources":["/Users/ning/it26/it26/VUE/src/views/Managerviews/DataAnalysis.vue"],"sourcesContent":["<template>\n  <div ref=\"pieChart\" id=\"pieChart\" style=\"margin: 15px\">\n\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\n\nexport default {\n  mounted () {\n    let pieChart = echarts.init(this.$refs.pieChart)\n    let data = [\n      { value: 40, name: 'CREED III' },\n      { value: 38, name: 'SHAZAM! FURY OF THE GODS' },\n      { value: 32, name: 'SCREAM VI' },\n      { value: 30, name: 'The Legend of 1900' },\n      { value: 28, name: 'Good Will Hunting' },\n      { value: 26, name: 'The Shawshank Redemption' },\n      { value: 22, name: 'Forrest Gump' },\n      { value: 18, name: 'The Kite Runner' }\n    ]\n\n    let option =  {\n      title: {\n        text: \"Viewings of the month\",\n        left: \"center\"\n      },\n      legend: {\n        left: \"left\",\n        orient: \"vertical\"\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      toolbox: {\n        show: true,\n        feature: {\n          mark: { show: true },\n          dataView: { show: true, readOnly: false },\n          restore: { show: true },\n          saveAsImage: { show: true }\n        }\n      },\n      series: [\n        {\n          name: 'Movie Pie',\n          type: 'pie',\n          radius: [50, 200],\n          center: ['50%', '50%'],\n          roseType: 'area',\n          itemStyle: {\n            borderRadius: 4\n          },\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          data\n        }\n      ],\n\n    }\n\n    pieChart.setOption(option)\n  }\n}\n</script>\n\n<style>\n#myChart {\n  width: 300px;\n  height: 300px;\n  border: 1px solid red;\n}\n</style>"],"mappings":"AAOA,OAAO,KAAKA,OAAM,MAAO,SAAS;AAElC,eAAe;EACbC,OAAMA,CAAA,EAAK;IACT,IAAIC,QAAO,GAAIF,OAAO,CAACG,IAAI,CAAC,IAAI,CAACC,KAAK,CAACF,QAAQ;IAC/C,IAAIG,IAAG,GAAI,CACT;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAY,CAAC,EAChC;MAAED,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAA2B,CAAC,EAC/C;MAAED,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAY,CAAC,EAChC;MAAED,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAqB,CAAC,EACzC;MAAED,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAoB,CAAC,EACxC;MAAED,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAA2B,CAAC,EAC/C;MAAED,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAe,CAAC,EACnC;MAAED,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAkB,EACvC;IAEA,IAAIC,MAAK,GAAK;MACZC,KAAK,EAAE;QACLC,IAAI,EAAE,uBAAuB;QAC7BC,IAAI,EAAE;MACR,CAAC;MACDC,MAAM,EAAE;QACND,IAAI,EAAE,MAAM;QACZE,MAAM,EAAE;MACV,CAAC;MACDC,OAAO,EAAE;QACPC,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;QACPC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE;UACPC,IAAI,EAAE;YAAEF,IAAI,EAAE;UAAK,CAAC;UACpBG,QAAQ,EAAE;YAAEH,IAAI,EAAE,IAAI;YAAEI,QAAQ,EAAE;UAAM,CAAC;UACzCC,OAAO,EAAE;YAAEL,IAAI,EAAE;UAAK,CAAC;UACvBM,WAAW,EAAE;YAAEN,IAAI,EAAE;UAAK;QAC5B;MACF,CAAC;MACDO,MAAM,EAAE,CACN;QACEjB,IAAI,EAAE,WAAW;QACjBkB,IAAI,EAAE,KAAK;QACXC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC;QACjBC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;QACtBC,QAAQ,EAAE,MAAM;QAChBC,SAAS,EAAE;UACTC,YAAY,EAAE;QAChB,CAAC;QACDC,QAAQ,EAAE;UACRF,SAAS,EAAE;YACTG,UAAU,EAAE,EAAE;YACdC,aAAa,EAAE,CAAC;YAChBC,WAAW,EAAE;UACf;QACF,CAAC;QACD7B;MACF;IAGJ;IAEAH,QAAQ,CAACiC,SAAS,CAAC3B,MAAM;EAC3B;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}