{"ast":null,"code":"import request from \"@/utils/request\";\nimport * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nexport default {\n  name: \"chargeCount\",\n  data: () => ({\n    chargeCount: [],\n    myChart: null\n  }),\n  async created() {\n    request.get(\"/operator/chargeCount\", {}).then(res => {\n      this.chargeCount = res.data;\n      console.log(res.data);\n      console.log(this.chargeCount.map(d => d));\n    });\n    echarts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition]);\n  },\n  mounted() {\n    this.myChart = echarts.init(document.getElementById('main'));\n    let option = {\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        data: this.chargeCount.map(d => d),\n        type: 'line',\n        smooth: false\n      }]\n    };\n    this.myChart.setOption(option);\n  },\n  watch: {\n    chargeCount: {\n      handler() {\n        this.myChart.setOption({\n          xAxis: {\n            type: 'category',\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: this.chargeCount.map(d => d),\n            type: 'line',\n            smooth: false\n          }]\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["request","echarts","GridComponent","LineChart","UniversalTransition","CanvasRenderer","name","data","chargeCount","myChart","created","get","then","res","console","log","map","d","use","mounted","init","document","getElementById","option","xAxis","type","yAxis","series","smooth","setOption","watch","handler"],"sources":["/Users/ning/it26/it26/VUE/src/views/Test.vue"],"sourcesContent":["<template>\n  <div style=\"padding:10px;flex: auto\">\n    <div id=\"main\"></div>\n\n  </div>\n\n</template>\n\n<script>\nimport request from \"@/utils/request\";\nimport * as echarts from 'echarts/core';\nimport {GridComponent} from 'echarts/components';\nimport {LineChart} from 'echarts/charts';\nimport {UniversalTransition} from 'echarts/features';\nimport {CanvasRenderer} from 'echarts/renderers';\n\n\nexport default {\n  name: \"chargeCount\",\n  data: () => ({\n    chargeCount: [],\n    myChart: null,\n  }),\n  async created() {\n    request.get(\"/operator/chargeCount\", {}).then(res => {\n      this.chargeCount = res.data\n      console.log(res.data)\n      console.log(this.chargeCount.map(d => d))\n    })\n    echarts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition]);\n  },\n  mounted() {\n    this.myChart = echarts.init(document.getElementById('main'));\n    let option = {\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          data: this.chargeCount.map(d => d),\n          type: 'line',\n          smooth: false\n        }\n      ]\n    };\n    this.myChart.setOption(option);\n  },\n  watch: {\n    chargeCount: {\n      handler() {\n        this.myChart.setOption({\n          xAxis: {\n            type: 'category',\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.chargeCount.map(d => d),\n              type: 'line',\n              smooth: false\n            }\n          ]\n        });\n      }\n    }\n  },\n}\n\n</script>\n\n<style scoped>\n#main {\n  width: 100%;\n  height: 300%;\n  margin: 40px auto;\n}\n</style>"],"mappings":"AASA,OAAOA,OAAM,MAAO,iBAAiB;AACrC,OAAO,KAAKC,OAAM,MAAO,cAAc;AACvC,SAAQC,aAAa,QAAO,oBAAoB;AAChD,SAAQC,SAAS,QAAO,gBAAgB;AACxC,SAAQC,mBAAmB,QAAO,kBAAkB;AACpD,SAAQC,cAAc,QAAO,mBAAmB;AAGhD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAEA,CAAA,MAAO;IACXC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMC,OAAOA,CAAA,EAAG;IACdV,OAAO,CAACW,GAAG,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,GAAE,IAAK;MACnD,IAAI,CAACL,WAAU,GAAIK,GAAG,CAACN,IAAG;MAC1BO,OAAO,CAACC,GAAG,CAACF,GAAG,CAACN,IAAI;MACpBO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,WAAW,CAACQ,GAAG,CAACC,CAAA,IAAKA,CAAC,CAAC;IAC1C,CAAC;IACDhB,OAAO,CAACiB,GAAG,CAAC,CAAChB,aAAa,EAAEC,SAAS,EAAEE,cAAc,EAAED,mBAAmB,CAAC,CAAC;EAC9E,CAAC;EACDe,OAAOA,CAAA,EAAG;IACR,IAAI,CAACV,OAAM,GAAIR,OAAO,CAACmB,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC5D,IAAIC,MAAK,GAAI;MACXC,KAAK,EAAE;QACLC,IAAI,EAAE,UAAU;QAChBlB,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;MACxD,CAAC;MACDmB,KAAK,EAAE;QACLD,IAAI,EAAE;MACR,CAAC;MACDE,MAAM,EAAE,CACN;QACEpB,IAAI,EAAE,IAAI,CAACC,WAAW,CAACQ,GAAG,CAACC,CAAA,IAAKA,CAAC,CAAC;QAClCQ,IAAI,EAAE,MAAM;QACZG,MAAM,EAAE;MACV;IAEJ,CAAC;IACD,IAAI,CAACnB,OAAO,CAACoB,SAAS,CAACN,MAAM,CAAC;EAChC,CAAC;EACDO,KAAK,EAAE;IACLtB,WAAW,EAAE;MACXuB,OAAOA,CAAA,EAAG;QACR,IAAI,CAACtB,OAAO,CAACoB,SAAS,CAAC;UACrBL,KAAK,EAAE;YACLC,IAAI,EAAE,UAAU;YAChBlB,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;UACxD,CAAC;UACDmB,KAAK,EAAE;YACLD,IAAI,EAAE;UACR,CAAC;UACDE,MAAM,EAAE,CACN;YACEpB,IAAI,EAAE,IAAI,CAACC,WAAW,CAACQ,GAAG,CAACC,CAAA,IAAKA,CAAC,CAAC;YAClCQ,IAAI,EAAE,MAAM;YACZG,MAAM,EAAE;UACV;QAEJ,CAAC,CAAC;MACJ;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}