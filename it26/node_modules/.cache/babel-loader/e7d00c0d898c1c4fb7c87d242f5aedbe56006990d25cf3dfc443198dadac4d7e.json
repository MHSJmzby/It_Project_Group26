{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"Test\",\n  data() {\n    return {\n      form: {}\n    };\n  },\n  created() {\n    let str = sessionStorage.getItem(\"user\") || \"{}\";\n    this.form = JSON.parse(str);\n  },\n  methods: {\n    handleAvatarSuccess(res) {\n      this.form.avatar = res.data;\n      this.$message.success(\"上传成功\");\n      // this.update()\n    },\n\n    update() {\n      request.put(\"/user\", this.form).then(res => {\n        console.log(res);\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"更新成功\"\n          });\n          sessionStorage.setItem(\"user\", JSON.stringify(this.form));\n          // 触发Layout更新用户信息\n          this.$emit(\"userInfo\");\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","form","created","str","sessionStorage","getItem","JSON","parse","methods","handleAvatarSuccess","res","avatar","$message","success","update","put","then","console","log","code","type","message","setItem","stringify","$emit","msg"],"sources":["/Users/ning/it26/it26/VUE/src/views/Test.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card style=\"width: 40%; margin: 10px\">\n      <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n        <el-form-item style=\"text-align: center\" label-width=\"0\">\n          <el-upload\n              class=\"avatar-uploader\"\n              action=\"http://localhost:9090/files/upload\"\n              :show-file-list=\"false\"\n              :on-success=\"handleAvatarSuccess\"\n          >\n            <img v-if=\"form.avatar\" :src=\"form.avatar\" class=\"avatar\">\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"form.username\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"昵称\">\n          <el-input v-model=\"form.nickName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"年龄\">\n          <el-input v-model=\"form.age\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\">\n          <el-input v-model=\"form.sex\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"地址\">\n          <el-input v-model=\"form.address\"></el-input>\n        </el-form-item>\n        <!--        <el-form-item label=\"密码\">-->\n        <!--          <el-input v-model=\"form.password\" show-password></el-input>-->\n        <!--        </el-form-item>-->\n        <el-form-item label=\"余额(￥)\">\n          <el-input v-model=\"form.account\" show-password></el-input>\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align: center\">\n        <el-button type=\"primary\" @click=\"update\">保存</el-button>\n      </div>\n    </el-card>\n\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"Test\",\n  data() {\n    return {\n      form: {}\n    }\n  },\n  created() {\n    let str = sessionStorage.getItem(\"user\") || \"{}\"\n    this.form = JSON.parse(str)\n  },\n  methods: {\n    handleAvatarSuccess(res) {\n      this.form.avatar = res.data\n      this.$message.success(\"上传成功\")\n      // this.update()\n    },\n    update() {\n      request.put(\"/user\", this.form).then(res => {\n        console.log(res)\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"更新成功\"\n          })\n          sessionStorage.setItem(\"user\", JSON.stringify(this.form))\n          // 触发Layout更新用户信息\n          this.$emit(\"userInfo\")\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style>\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 120px;\n  height: 120px;\n  line-height: 120px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n</style>\n"],"mappings":"AA8CA,OAAOA,OAAM,MAAO,iBAAiB;AAErC,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;IACT;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIC,GAAE,GAAIC,cAAc,CAACC,OAAO,CAAC,MAAM,KAAK,IAAG;IAC/C,IAAI,CAACJ,IAAG,GAAIK,IAAI,CAACC,KAAK,CAACJ,GAAG;EAC5B,CAAC;EACDK,OAAO,EAAE;IACPC,mBAAmBA,CAACC,GAAG,EAAE;MACvB,IAAI,CAACT,IAAI,CAACU,MAAK,GAAID,GAAG,CAACV,IAAG;MAC1B,IAAI,CAACY,QAAQ,CAACC,OAAO,CAAC,MAAM;MAC5B;IACF,CAAC;;IACDC,MAAMA,CAAA,EAAG;MACPhB,OAAO,CAACiB,GAAG,CAAC,OAAO,EAAE,IAAI,CAACd,IAAI,CAAC,CAACe,IAAI,CAACN,GAAE,IAAK;QAC1CO,OAAO,CAACC,GAAG,CAACR,GAAG;QACf,IAAIA,GAAG,CAACS,IAAG,KAAM,GAAG,EAAE;UACpB,IAAI,CAACP,QAAQ,CAAC;YACZQ,IAAI,EAAE,SAAS;YACfC,OAAO,EAAE;UACX,CAAC;UACDjB,cAAc,CAACkB,OAAO,CAAC,MAAM,EAAEhB,IAAI,CAACiB,SAAS,CAAC,IAAI,CAACtB,IAAI,CAAC;UACxD;UACA,IAAI,CAACuB,KAAK,CAAC,UAAU;QACvB,OAAO;UACL,IAAI,CAACZ,QAAQ,CAAC;YACZQ,IAAI,EAAE,OAAO;YACbC,OAAO,EAAEX,GAAG,CAACe;UACf,CAAC;QACH;MACF,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}