{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"@/router\";\nexport default {\n  name: \"Register\",\n  components: {},\n  data() {\n    return {\n      ruleFormRef: {},\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input Username',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please input Password',\n          trigger: 'blur'\n        }],\n        confirm: [{\n          required: true,\n          message: 'Please confirm Password',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    regist(ruleFormRef) {\n      if (this.form.password !== this.form.confirm) {\n        this.$message({\n          type: \"error\",\n          message: 'The 2 passwords entered are inconsistent!'\n        });\n        return;\n      }\n      this.$refs['form'].validate(valid => {\n        if (this.form.id) {\n          request.post(\"/register\", this.form).then(res => {\n            console.log(res);\n            if (res.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"Register Successfully!\"\n              });\n              router.push(\"/user\");\n            } else {\n              this.$message({\n                type: \"error\",\n                message: \"res.msg\"\n              });\n            }\n            router.push(\"/login\");\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","name","components","data","ruleFormRef","rules","required","message","trigger","password","confirm","methods","regist","form","$message","type","$refs","validate","valid","id","request","post","then","res","console","log","code","push"],"sources":["/Users/ning/it26/it26/VUE/src/views/Register.vue"],"sourcesContent":["<template>\n  <div\n      style=\"width: 400px; margin: 60px auto\"\n      class=\"flex flex-col justify-center items-center inline-flex\"\n      :style=\"{boxShadow: '--el-box-shadow-dark',}\"\n  >\n    <el-tabs type=\"border-card\">\n      <div style=\"margin: 10px; font-size: large; font-weight: bold; text-align: center\">\n        Movie Ticket Online Ordering System\n      </div>\n\n      <el-form\n          :label-position=\"'top'\"\n          label-width=\"100px\"\n          :model=\"ruleFormRef\"\n          style=\"margin-top: 50px; max-width: 460px;\"\n          :rules=\"rules\"\n      >\n        <el-form-item label=\"Email\">\n          <el-input v-model=\"ruleFormRef.email\" />\n        </el-form-item>\n        <el-form-item label=\"Username\">\n          <el-input v-model=\"ruleFormRef.name\" />\n        </el-form-item>\n        <el-form-item label=\"Password\">\n          <el-input v-model=\"ruleFormRef.password\" />\n        </el-form-item>\n        <el-form-item label=\"Confirm Password\">\n          <el-input v-model=\"ruleFormRef.confirm\" />\n        </el-form-item>\n        <el-form-item style=\" padding-left: 150px; padding-top: 10px\">\n          <el-button color='black' @click=\"regist(ruleFormRef)\">\n            Sign up\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport router from \"@/router\";\n\nexport default {\n  name: \"Register\",\n  components: {},\n  data() {\n    return {\n      ruleFormRef: {},\n      rules: {\n        name: [\n          {required: true, message: 'Please input Username', trigger: 'blur'},\n        ],\n        password: [\n          {required: true, message: 'Please input Password', trigger: 'blur'},\n        ],\n        confirm: [\n          {required: true, message: 'Please confirm Password', trigger: 'blur'},\n        ],\n      },\n    }\n  },\n  methods: {\n    regist(ruleFormRef) {\n      if (this.form.password !== this.form.confirm) {\n        this.$message({\n          type: \"error\",\n          message: 'The 2 passwords entered are inconsistent!'\n        })\n        return\n      }\n\n      this.$refs['form'].validate((valid) => {\n        if (this.form.id) {\n          request.post(\"/register\", this.form).then(res => {\n            console.log(res)\n            if (res.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"Register Successfully!\"\n              })\n              router.push(\"/user\")\n            } else {\n              this.$message({\n                type: \"error\",\n                message: \"res.msg\"\n              })\n            }\n            router.push(\"/login\")\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":";AAyCA,OAAOA,MAAK,MAAO,UAAU;AAE7B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC,CAAC;MACfC,KAAK,EAAE;QACLJ,IAAI,EAAE,CACJ;UAACK,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,uBAAuB;UAAEC,OAAO,EAAE;QAAM,CAAC,CACpE;QACDC,QAAQ,EAAE,CACR;UAACH,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,uBAAuB;UAAEC,OAAO,EAAE;QAAM,CAAC,CACpE;QACDE,OAAO,EAAE,CACP;UAACJ,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,yBAAyB;UAAEC,OAAO,EAAE;QAAM,CAAC;MAEzE;IACF;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,MAAMA,CAACR,WAAW,EAAE;MAClB,IAAI,IAAI,CAACS,IAAI,CAACJ,QAAO,KAAM,IAAI,CAACI,IAAI,CAACH,OAAO,EAAE;QAC5C,IAAI,CAACI,QAAQ,CAAC;UACZC,IAAI,EAAE,OAAO;UACbR,OAAO,EAAE;QACX,CAAC;QACD;MACF;MAEA,IAAI,CAACS,KAAK,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAEC,KAAK,IAAK;QACrC,IAAI,IAAI,CAACL,IAAI,CAACM,EAAE,EAAE;UAChBC,OAAO,CAACC,IAAI,CAAC,WAAW,EAAE,IAAI,CAACR,IAAI,CAAC,CAACS,IAAI,CAACC,GAAE,IAAK;YAC/CC,OAAO,CAACC,GAAG,CAACF,GAAG;YACf,IAAIA,GAAG,CAACG,IAAG,KAAM,GAAG,EAAE;cACpB,IAAI,CAACZ,QAAQ,CAAC;gBACZC,IAAI,EAAE,SAAS;gBACfR,OAAO,EAAE;cACX,CAAC;cACDP,MAAM,CAAC2B,IAAI,CAAC,OAAO;YACrB,OAAO;cACL,IAAI,CAACb,QAAQ,CAAC;gBACZC,IAAI,EAAE,OAAO;gBACbR,OAAO,EAAE;cACX,CAAC;YACH;YACAP,MAAM,CAAC2B,IAAI,CAAC,QAAQ;UACtB,CAAC;QACH;MACF,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}